@model Dashboard_PerformDrillDown_MVC.Models.ChangePasswordModel

<div class="accountHeader">
    <h2>
        Change Password</h2>
    <p>Use the form below to change your password.</p>
        <p>New passwords are required to be a minimum of @Membership.MinRequiredPasswordLength characters in length.</p>
    </div>
@using (Html.BeginForm()) {
        @Html.DevExpress().Label(settings => {
        settings.Name = "OldPasswordLabel";
        settings.Text = "Old Password";
        settings.AssociatedControlName = "OldPassword";
    }).GetHtml()
    <div class="form-field">
        @Html.EditorFor(m => m.OldPassword)
        @Html.ValidationMessageFor(m => m.OldPassword)
    </div>
                
    @Html.DevExpress().Label(settings => {
        settings.Name = "NewPasswordLabel";
        settings.Text = "New Password";
        settings.AssociatedControlName = "NewPassword";
    }).GetHtml()
    <div class="form-field">
        @Html.EditorFor(m => m.NewPassword)
        @Html.ValidationMessageFor(m => m.NewPassword)
    </div>
                
    @Html.DevExpress().Label(settings => {
        settings.Name = "ConfirmPasswordLabel";
        settings.Text = "Confirm Password";
        settings.AssociatedControlName = "ConfirmPassword";
    }).GetHtml()
    <div class="editor-field">
        @Html.EditorFor(m => m.ConfirmPassword)
        @Html.ValidationMessageFor(m => m.ConfirmPassword)
    </div>
    
    @Html.DevExpress().Button(settings => {
        settings.Name = "Button";
        settings.Text = "Change Password";
        settings.UseSubmitBehavior = true;
    }).GetHtml()
}